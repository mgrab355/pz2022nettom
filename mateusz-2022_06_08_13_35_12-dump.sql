-- MySQL dump 10.13  Distrib 5.7.38, for Linux (x86_64)
--
-- Host: 127.0.0.1    Database: nettom1
-- ------------------------------------------------------
-- Server version	5.7.38-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `api_key`
--

DROP TABLE IF EXISTS `api_key`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `api_key` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `api_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `api_key`
--

LOCK TABLES `api_key` WRITE;
/*!40000 ALTER TABLE `api_key` DISABLE KEYS */;
INSERT INTO `api_key` VALUES (1,'l40ssrb8geospr95ppaps7eb88');
/*!40000 ALTER TABLE `api_key` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `doctrine_migration_versions`
--

DROP TABLE IF EXISTS `doctrine_migration_versions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `doctrine_migration_versions` (
  `version` varchar(191) COLLATE utf8_unicode_ci NOT NULL,
  `executed_at` datetime DEFAULT NULL,
  `execution_time` int(11) DEFAULT NULL,
  PRIMARY KEY (`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `doctrine_migration_versions`
--

LOCK TABLES `doctrine_migration_versions` WRITE;
/*!40000 ALTER TABLE `doctrine_migration_versions` DISABLE KEYS */;
INSERT INTO `doctrine_migration_versions` VALUES ('DoctrineMigrations\\Version20220510180205','2022-05-10 20:02:44',42),('DoctrineMigrations\\Version20220510193544','2022-05-10 21:36:08',25),('DoctrineMigrations\\Version20220514113733','2022-05-14 13:37:54',82),('DoctrineMigrations\\Version20220514125457','2022-05-14 14:55:02',46),('DoctrineMigrations\\Version20220514125956','2022-05-14 15:00:05',31),('DoctrineMigrations\\Version20220519161021','2022-05-19 18:12:01',54),('DoctrineMigrations\\Version20220519161148','2022-05-19 18:14:14',30),('DoctrineMigrations\\Version20220519161526','2022-05-19 18:15:35',25),('DoctrineMigrations\\Version20220519161949','2022-05-19 18:20:02',24),('DoctrineMigrations\\Version20220523164115','2022-05-23 18:43:48',26),('DoctrineMigrations\\Version20220523171207','2022-05-23 19:12:11',31),('DoctrineMigrations\\Version20220523191722','2022-05-23 21:17:42',92),('DoctrineMigrations\\Version20220524171244','2022-05-24 19:12:53',39),('DoctrineMigrations\\Version20220525065521','2022-05-25 08:55:26',57),('DoctrineMigrations\\Version20220525065713','2022-05-25 08:57:19',80),('DoctrineMigrations\\Version20220529151727','2022-05-29 17:17:42',31),('DoctrineMigrations\\Version20220529152400','2022-05-29 17:24:05',39),('DoctrineMigrations\\Version20220606171052','2022-06-06 19:11:06',65),('DoctrineMigrations\\Version20220607184843','2022-06-07 20:49:22',39),('DoctrineMigrations\\Version20220608005521','2022-06-08 02:56:13',127);
/*!40000 ALTER TABLE `doctrine_migration_versions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `page_alert`
--

DROP TABLE IF EXISTS `page_alert`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `page_alert` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `evidence` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `alert_id` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `risk` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `uri` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `param` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `page_alert`
--

LOCK TABLES `page_alert` WRITE;
/*!40000 ALTER TABLE `page_alert` DISABLE KEYS */;
INSERT INTO `page_alert` VALUES (17,'X-Content-Type-Options Header Missing','','id','Low','http://127.0.0.1','X-Content-Type-Options'),(18,'Missing Anti-clickjacking Header','','id','Medium','http://127.0.0.1','X-Frame-Options'),(19,'Content Security Policy (CSP) Header Not Set','','id','Medium','http://127.0.0.1',''),(20,'test','','id','Medium','http://127.0.0.1',''),(21,'X-Content-Type-Options Header Missing','','2','Low','http://127.0.0.1','X-Content-Type-Options'),(22,'Missing Anti-clickjacking Header','','0','Medium','http://127.0.0.1','X-Frame-Options'),(23,'Content Security Policy (CSP) Header Not Set','','1','Medium','http://127.0.0.1',''),(24,'test','','3','Medium','http://127.0.0.1',''),(25,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','X-Powered-By: PHP/8.1.6','14','Low','http://localhost:6969/',''),(26,'X-Content-Type-Options Header Missing','','13','Low','http://localhost:6969/','X-Content-Type-Options'),(27,'Missing Anti-clickjacking Header','','11','Medium','http://localhost:6969/','X-Frame-Options'),(28,'Content Security Policy (CSP) Header Not Set','','12','Medium','http://localhost:6969/',''),(29,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','X-Powered-By: PHP/8.1.6','14','Low','http://localhost:6969/',''),(30,'X-Content-Type-Options Header Missing','','13','Low','http://localhost:6969/','X-Content-Type-Options'),(31,'Missing Anti-clickjacking Header','','11','Medium','http://localhost:6969/','X-Frame-Options'),(32,'Content Security Policy (CSP) Header Not Set','','12','Medium','http://localhost:6969/',''),(33,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','X-Powered-By: PHP/8.1.6','14','Low','http://localhost:6969/',''),(34,'X-Content-Type-Options Header Missing','','13','Low','http://localhost:6969/','X-Content-Type-Options'),(35,'Missing Anti-clickjacking Header','','11','Medium','http://localhost:6969/','X-Frame-Options'),(36,'Content Security Policy (CSP) Header Not Set','','12','Medium','http://localhost:6969/',''),(37,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','X-Powered-By: PHP/8.1.6','14','Low','http://localhost:6969/',''),(38,'X-Content-Type-Options Header Missing','','13','Low','http://localhost:6969/','X-Content-Type-Options'),(39,'Missing Anti-clickjacking Header','','11','Medium','http://localhost:6969/','X-Frame-Options'),(40,'Content Security Policy (CSP) Header Not Set','','12','Medium','http://localhost:6969/','');
/*!40000 ALTER TABLE `page_alert` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `project`
--

DROP TABLE IF EXISTS `project`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `project` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `url` varchar(1000) COLLATE utf8mb4_unicode_ci NOT NULL,
  `users` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `url_image` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=62 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `project`
--

LOCK TABLES `project` WRITE;
/*!40000 ALTER TABLE `project` DISABLE KEYS */;
INSERT INTO `project` VALUES (1,'test','testhngfmigtf','trgrgts',''),(2,'test2222','dsfads','ss',''),(3,'dasdasd','sdasdasdas','dsadas',''),(4,'tettet','etete','tetetete',''),(5,'Owasp Zapp Scanner','http://127.0.0.1:7000/','test2341',''),(6,'test06','testweb','ss','ssadaass'),(7,'test062','testweb','ss','ssadaass'),(8,'test062','testweb','ss','ssadaass'),(9,'test0622231','testweb','ss','ssadaass'),(10,'test0622231','testweb','ss','ssadaass'),(11,'test0622231','testweb','ss','ssadaass'),(12,'test0622231','testweb','ss','ssadaass'),(13,'wqeqweqw','sadasdsad','asdasdasd','sadsadas'),(14,'kjyhgtrfevxgbc','hnjgbfvcxfcbgh','sxdcrfvgubh','xscdryfvgb'),(15,'132','213','213','123'),(16,'132','213','213','123'),(17,'132','213','213','123'),(18,'123','213','213','213'),(19,'13','213','213','213'),(20,'213','213','213','213'),(21,'213','213','213','213'),(22,'123','213','213','213'),(23,'123','213','213','213'),(24,'123','213','23','213'),(25,'3213','3213','213321','21313'),(26,'3213','3213','213321','21313'),(27,'123','23','231','213'),(28,'123','23','231','213'),(29,'123','23','231','213'),(30,'123','23','231','213'),(31,'123','213','234','324'),(32,'213','213213','231321','2131'),(33,'21321','3213','21321','213213'),(34,'21321','3213','21321','213213'),(35,'21321','3213','21321','213213'),(36,'21321','3213','21321','213213'),(37,'21321','3213','21321','213213'),(38,'21321','3213','21321','213213'),(39,'21323','21321321','2131','321'),(40,'21323','21321321','2131','321'),(41,'21323','21321321','2131','321'),(42,'21323','21321321','2131','321'),(43,'321321','3213','321321','3213'),(44,'12321','3','213','213'),(45,'12321','3','213','213'),(46,'213','213','213','213'),(47,'213','213','213','213'),(48,'213','213','213','213'),(49,'213','213','213','213'),(50,'213','213','213','213'),(51,'213','213','213','213'),(52,'213','213','21321','321'),(53,'213','213','21321','321'),(54,'213','213','21321','321'),(55,'213','213','213','213'),(56,'213','213','213','213'),(57,'213','http://127.0.0.1:7000','213','213'),(58,'213','213','123','213'),(59,'local','http://127.0.0.1:7000/','123','123'),(60,'local1','http://127.0.0.1:7000/','213','123'),(61,'New','http://127.0.0.1:7000/','23124','412312');
/*!40000 ALTER TABLE `project` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `project_raports`
--

DROP TABLE IF EXISTS `project_raports`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `project_raports` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `projects_id` int(11) NOT NULL,
  `raport_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `project_raports`
--

LOCK TABLES `project_raports` WRITE;
/*!40000 ALTER TABLE `project_raports` DISABLE KEYS */;
INSERT INTO `project_raports` VALUES (1,1,1),(2,1,1),(3,1,1);
/*!40000 ALTER TABLE `project_raports` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `raport_test`
--

DROP TABLE IF EXISTS `raport_test`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `raport_test` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `nazwa` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `opis` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `raport_test`
--

LOCK TABLES `raport_test` WRITE;
/*!40000 ALTER TABLE `raport_test` DISABLE KEYS */;
INSERT INTO `raport_test` VALUES (1,'test1','Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum'),(2,'test2','to jest 2 test'),(3,'test1 symfony','test2'),(4,'testAPI','to jest pierwszy test api'),(5,'TestAPI2','drugi test api'),(6,'test api 3','adasfdsfsdafsdf');
/*!40000 ALTER TABLE `raport_test` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `scan_alert`
--

DROP TABLE IF EXISTS `scan_alert`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `scan_alert` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `risk` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `param` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `evidence` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` varchar(1000) COLLATE utf8mb4_unicode_ci NOT NULL,
  `confidence` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `solution` varchar(1000) COLLATE utf8mb4_unicode_ci NOT NULL,
  `method` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,
  `sourceid` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `plugin_id` int(11) NOT NULL,
  `cweid` int(11) NOT NULL,
  `wascid` int(11) NOT NULL,
  `messege_id` int(11) NOT NULL,
  `url` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `alert_ref` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `reference` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `scans_id` int(11) DEFAULT NULL,
  `project_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `scan_alert_scans_id__fk` (`scans_id`),
  KEY `scan_alert_project__fk` (`project_id`),
  CONSTRAINT `scan_alert_project__fk` FOREIGN KEY (`project_id`) REFERENCES `project` (`id`),
  CONSTRAINT `scan_alert_scans_id__fk` FOREIGN KEY (`scans_id`) REFERENCES `scans_id` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=73 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `scan_alert`
--

LOCK TABLES `scan_alert` WRITE;
/*!40000 ALTER TABLE `scan_alert` DISABLE KEYS */;
INSERT INTO `scan_alert` VALUES (25,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',NULL,5),(26,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',NULL,5),(27,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',NULL,5),(28,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',NULL,5),(29,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',NULL,5),(30,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',NULL,5),(31,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',NULL,5),(32,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',NULL,5),(33,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',NULL,5),(34,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',NULL,5),(35,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',NULL,5),(36,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',NULL,5),(37,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',36,5),(38,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',36,5),(39,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',36,5),(40,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',36,5),(41,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',37,5),(42,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',37,5),(43,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',37,5),(44,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',37,5),(45,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',38,5),(46,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',38,5),(47,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',38,5),(48,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',38,5),(49,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',39,5),(50,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',39,5),(51,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',39,5),(52,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',39,5),(53,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',40,61),(54,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',40,61),(55,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',40,61),(56,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',40,61),(57,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',41,61),(58,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',41,61),(59,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',41,61),(60,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',41,61),(61,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',42,61),(62,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',42,61),(63,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',42,61),(64,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',42,61),(65,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',43,61),(66,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',43,61),(67,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',43,61),(68,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',43,61),(69,'Missing Anti-clickjacking Header','Medium','X-Frame-Options','','The response does not include either Content-Security-Policy with \'frame-ancestors\' directive or X-Frame-Options to protect against \'ClickJacking\' attacks.','Medium','Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it\'s part of a FRAMESET) then you\'ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy\'s \"frame-ancestors\" directive.','GET','3',10020,1021,15,1,'http://127.0.0.1:7000/','10020-1','https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',44,61),(70,'Content Security Policy (CSP) Header Not Set','Medium','','','Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.','High','Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.','GET','3',10038,693,15,1,'http://127.0.0.1:7000/','10038','https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/',44,61),(71,'X-Content-Type-Options Header Missing','Low','X-Content-Type-Options','','The Anti-MIME-Sniffing header X-Content-Type-Options was not set to \'nosniff\'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.','Medium','Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to \'nosniff\' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.','GET','3',10021,693,15,1,'http://127.0.0.1:7000/','10021','http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers',44,61),(72,'Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)','Low','','X-Powered-By: PHP/8.1.6','The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.','Medium','Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.','GET','3',10037,200,13,1,'http://127.0.0.1:7000/','10037','http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html',44,61);
/*!40000 ALTER TABLE `scan_alert` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `scans_id`
--

DROP TABLE IF EXISTS `scans_id`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `scans_id` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `scans_id`
--

LOCK TABLES `scans_id` WRITE;
/*!40000 ALTER TABLE `scans_id` DISABLE KEYS */;
INSERT INTO `scans_id` VALUES (31,'5'),(32,'5'),(33,'5'),(34,'5'),(35,'5'),(36,'5'),(37,'5'),(38,'5'),(39,'5'),(40,'61'),(41,'61'),(42,'61'),(43,'61'),(44,'61');
/*!40000 ALTER TABLE `scans_id` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `site_aletrs`
--

DROP TABLE IF EXISTS `site_aletrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_aletrs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `informational` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `low` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `medium` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `high` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `site_aletrs`
--

LOCK TABLES `site_aletrs` WRITE;
/*!40000 ALTER TABLE `site_aletrs` DISABLE KEYS */;
/*!40000 ALTER TABLE `site_aletrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `email` varchar(180) COLLATE utf8mb4_unicode_ci NOT NULL,
  `roles` json NOT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `UNIQ_8D93D649E7927C74` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (1,'admin@admin.com','[\"ROLE_ADMIN\"]','$2y$13$KtN7RRJb2fBJYaIB7L2TQOcohuURlEh3zwTA7H9qVqh3hSY6v2T0u'),(2,'test@test.com','[\"ROLE_USER\"]','$2y$13$iuk2Av06p2QoSs1DWxouqe6AAgJC74i1UL2fSPzrB.e4xq/iTdf3u '),(3,'test2@test.com','[\"ROLE_USER\"]','$2y$13$EhijlWFDxXka0SNqawpaaeLZGKaCJ9Ay3wi.P9p7BOJ3qZrA.uazS');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `email` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `role` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users_project`
--

DROP TABLE IF EXISTS `users_project`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users_project` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `projects_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users_project`
--

LOCK TABLES `users_project` WRITE;
/*!40000 ALTER TABLE `users_project` DISABLE KEYS */;
INSERT INTO `users_project` VALUES (1,1,2),(2,1,1),(3,1,1),(4,1,1),(5,1,1),(6,1,1),(7,1,1),(8,1,1),(9,1,1),(10,1,1),(11,1,1),(12,1,1),(13,1,1);
/*!40000 ALTER TABLE `users_project` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-06-08 13:35:12
